@mixin light-theme() {
  --color-background: #{get-color('light')};
  --color-mid: #{get-color('mid')};
  --color-text: #{get-color('dark')};
}
@mixin dark-theme() {
  --color-background: #{get-color('dark')};
  --color-mid: #{get-color('mid')};
  --color-text: #{get-color('light')};
  p, *:not([class]) {
    font-weight: 400;
  }

  h1,
  h2,
  h3,
  h4 {
    font-weight: 600;
  }
}

[data-theme=light] {
  @include light-theme();
}
:root {
  --space: #{get-size('500')};
  @include light-theme();
  @include apply-utility('duration', 'med');
}

[data-theme=dark] {
  @include dark-theme();
}
@media (prefers-color-scheme: dark) {
  :root {
    @include dark-theme();
  }
}

body {
  background: var(--color-background, #{get-color('light')});
  color: var(--color-text, #{get-color('dark')});
  font-size: get-size('500');
  height: 100%;
  width: 100%;
  transition: color var(--duration), background var(--duration), font-weight var(--duration);

  @include apply-utility('leading', 'regular');
  @include apply-utility('font', 'base');
}

a:not([class]) {
  color: currentColor;
  text-decoration-color: var(--color-mid);
}

:focus {
  outline: 2px dashed var(--color-text);
  outline-offset: 0.25rem;
}

main:focus {
  outline: none;
}

h1,
h2,
h3,
h4 {
  font-weight: 900;

  @include apply-utility('font', 'special');
  @include apply-utility('leading', 'flat');
}

// High contrast selection because it can help visually-impaired
// folks read the text easier
::selection {
  color: var(--color-background);

  // We set this as an RGBA because thatâ€™s how you get a solid color, by using 0.99
  // alpha value. Browsers are wild.
  background: var(--color-text);
}
